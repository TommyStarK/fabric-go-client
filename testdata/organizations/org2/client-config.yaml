organization: Org2
connectionProfile: ./testdata/organizations/org2/connection-profile.yaml
identities:
  admin:
    username: Admin
    certificate: ./testdata/hyperledger-fabric-network/crypto-config/peerOrganizations/org2.dummy.com/users/Admin@org2.dummy.com/msp/signcerts/Admin@org2.dummy.com-cert.pem
    privateKey: ./testdata/hyperledger-fabric-network/crypto-config/peerOrganizations/org2.dummy.com/users/Admin@org2.dummy.com/msp/keystore/priv_sk
  users:
  - username: User1
    certificate: ./testdata/hyperledger-fabric-network/crypto-config/peerOrganizations/org2.dummy.com/users/User1@org2.dummy.com/msp/signcerts/User1@org2.dummy.com-cert.pem
    privateKey: ./testdata/hyperledger-fabric-network/crypto-config/peerOrganizations/org2.dummy.com/users/User1@org2.dummy.com/msp/keystore/priv_sk
channels:
  - name: channelall
    anchorPeerConfigPath: ./testdata/hyperledger-fabric-network/channel-artifacts/Org2MSPanchors_channelall.tx
    configPath: ./testdata/hyperledger-fabric-network/channel-artifacts/channelall.tx
chaincodes:
  - name: fcacc
    initRequired: true
    mustBeApprovedByOrgs:
      - Org1MSP
      - Org2MSP
    path: /go/src/github.com/TommyStarK/fabric-go-client/testdata/hyperledger-fabric-chaincode/fcacc
    role: member
    sequence: 1
    version: 1.0
    collections:
      - name: dummy
        memberOnlyRead: false
        policy: OR('Org1MSP.peer', 'Org2MSP.peer')
        blockToLive: 0
        requiredPeerCount: 0
        maxPeerCount: 0

